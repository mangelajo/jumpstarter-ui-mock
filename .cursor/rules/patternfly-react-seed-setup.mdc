---
description: Vibe code a PatternFly UI
globs: 
alwaysApply: false
---
# patternfly-react-seed Setup

Guide for using [patternfly-react-seed](mdc:https:/github.com/patternfly/patternfly-react-seed) to start PatternFly apps. Scaffolds with layout, routing, build/test tools.

## Prerequisites

*   **Node.js & npm:** Ensure installed and in PATH (`node --version && npm --version`). Install from [https://nodejs.org/](mdc:https:/nodejs.org).
*   **nvm (Optional):** If used, ensure loaded and Node version active (`nvm use node`).

## Quick Start

1.  **Clone:** `git clone https://github.com/patternfly/patternfly-react-seed` (AI can run)
2.  **Navigate:** `cd patternfly-react-seed` (Run npm commands here)
3.  **Install:** `npm install` (AI can run after Node/npm check)
4.  **Start Dev Server:** `npm run start:dev`. **User recommended**: Run in separate terminal. Server usually at `http://localhost:9000`. More info: [README.md](mdc:README.md).

## Advanced: Context7 MCP Server Setup

For advanced documentation and code search in Cursor, set up Context7 as an MCP server:
- In Cursor, open the MCP server settings.
- Add Context7 as a documentation/code search provider.
- This enables AI-powered, up-to-date PatternFly and open source documentation search directly in your IDE.
- For more, see the [Context7 documentation](mdc:https:/context7.com/docs) or Cursor's MCP server setup guide.

## Indexing Resources (for IDE/Awareness)

*   PatternFly Docs: [https://www.patternfly.org/](mdc:https:/www.patternfly.org)
*   PatternFly Core (HTML/CSS): `https://github.com/patternfly/patternfly`
*   PatternFly React Code: `https://github.com/patternfly/patternfly-react`
*   React Charts README: [`@patternfly/react-charts` README](mdc:https:/github.com/patternfly/patternfly-react/tree/main/packages/react-charts#readme)
*   Local Docs: [patternfly-chatbot.txt](mdc:patternfly-chatbot.txt), [patternfly-react-component-groups.txt](mdc:patternfly-react-component-groups.txt)

## PatternFly Development Guidelines

For all PatternFly development guidelines, consult this project's documentation in the `documentation/` directory. This includes:
- Component architecture and usage rules
- Styling and class naming conventions
- Data display, table, and data view best practices
- Integration, troubleshooting, and advanced usage

> **Always reference the local documentation for the most accurate and project-specific guidance.**

> **Note on Utility Classes:**
> Avoid over-relying on utility classes to style components. Prefer using the component's own props and API for layout and appearance, as these are designed for recommended use cases. Use utility classes only when necessary, and add a comment explaining why the utility class is required. This approach helps ensure your code remains maintainable and aligned with future PatternFly updates.

